===============================================================================
                    PORTFOLIO WEBSITE - COMPLETE INSTALLATION GUIDE
===============================================================================

üìã TABLE OF CONTENTS
1. Prerequisites
2. Project Setup
3. Dependencies Installation
4. Development Commands
5. Production Build
6. EmailJS Configuration
7. Deployment Options
8. Troubleshooting

===============================================================================
1. PREREQUISITES
===============================================================================

Before starting, ensure you have the following installed:

‚úÖ Node.js (Version 16 or higher)
   Download: https://nodejs.org/
   Check version: node --version

‚úÖ npm (comes with Node.js)
   Check version: npm --version

‚úÖ Git (for version control)
   Download: https://git-scm.com/
   Check version: git --version

‚úÖ Code Editor (VS Code recommended)
   Download: https://code.visualstudio.com/

===============================================================================
2. PROJECT SETUP
===============================================================================

Option A: Clone from Repository (if available)
----------------------------------------------
git clone <repository-url>
cd portfolio_latest

Option B: Create New Project from Scratch
-----------------------------------------
npm create vite@latest portfolio_latest -- --template react
cd portfolio_latest

Option C: Use Existing Project
------------------------------
cd portfolio_latest

===============================================================================
3. DEPENDENCIES INSTALLATION
===============================================================================

üîß CORE DEPENDENCIES
--------------------

# Install all dependencies at once
npm install

# OR install individually:

# React & React DOM (Core React libraries)
npm install react@^18.2.0 react-dom@^18.2.0

# Bootstrap & React Bootstrap (UI Framework)
npm install bootstrap@^5.3.2 react-bootstrap@^2.9.1

# FontAwesome (Icons)
npm install @fortawesome/fontawesome-free@^6.5.1

# EmailJS (Contact Form Email Service)
npm install emailjs-com@^3.2.0

üõ†Ô∏è DEVELOPMENT DEPENDENCIES
---------------------------

# Vite & React Plugin (Build Tool)
npm install --save-dev @vitejs/plugin-react@^4.2.1 vite@^5.0.8

# ESLint (Code Linting)
npm install --save-dev eslint@^8.55.0 eslint-plugin-react@^7.33.2 eslint-plugin-react-hooks@^4.6.0 eslint-plugin-react-refresh@^0.4.5

# TypeScript Types (for better development experience)
npm install --save-dev @types/react@^18.2.43 @types/react-dom@^18.2.17

üì¶ COMPLETE PACKAGE.JSON DEPENDENCIES
-------------------------------------

{
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "bootstrap": "^5.3.2",
    "react-bootstrap": "^2.9.1",
    "@fortawesome/fontawesome-free": "^6.5.1",
    "emailjs-com": "^3.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.43",
    "@types/react-dom": "^18.2.17",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.55.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.5",
    "vite": "^5.0.8"
  }
}

===============================================================================
4. DEVELOPMENT COMMANDS
===============================================================================

üöÄ START DEVELOPMENT SERVER
---------------------------
npm run dev

# This will:
# - Start Vite development server
# - Enable hot module replacement (HMR)
# - Open browser at http://localhost:5173
# - Watch for file changes and auto-reload

üîç CODE LINTING
---------------
npm run lint

# This will:
# - Check code for syntax errors
# - Enforce coding standards
# - Show warnings and errors

üîß LINT WITH AUTO-FIX
---------------------
npm run lint -- --fix

# This will:
# - Fix automatically fixable issues
# - Show remaining issues that need manual fixing

===============================================================================
5. PRODUCTION BUILD
===============================================================================

üèóÔ∏è BUILD FOR PRODUCTION
-----------------------
npm run build

# This will:
# - Create optimized production build
# - Generate static files in 'dist' folder
# - Minify CSS and JavaScript
# - Optimize images and assets

üì¶ PREVIEW PRODUCTION BUILD
---------------------------
npm run preview

# This will:
# - Serve the production build locally
# - Test the built application
# - Verify everything works before deployment

===============================================================================
6. EMAILJS CONFIGURATION
===============================================================================

üìß SETUP EMAILJS FOR CONTACT FORM
---------------------------------

Step 1: Create EmailJS Account
- Go to https://www.emailjs.com/
- Sign up for free account
- Verify your email

Step 2: Create Email Service
- Go to Email Services
- Click "Add New Service"
- Choose your email provider (Gmail, Outlook, etc.)
- Follow setup instructions

Step 3: Create Email Template
- Go to Email Templates
- Click "Create New Template"
- Design your email template with variables:
  - {{name}} - sender's name
  - {{email}} - sender's email
  - {{message}} - message content

Step 4: Get Configuration Details
- Service ID: Found in Email Services
- Template ID: Found in Email Templates
- User ID: Found in Account settings

Step 5: Update Contact.jsx
Replace in src/components/Contact.jsx:

// Replace these with your actual IDs
emailjs.send('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', formData, 'YOUR_USER_ID')

With:

// Your actual configuration
emailjs.send('service_abc123', 'template_xyz789', formData, 'user_def456')

===============================================================================
7. DEPLOYMENT OPTIONS
===============================================================================

üåê VERCEL DEPLOYMENT (Recommended)
----------------------------------
# Install Vercel CLI
npm install -g vercel

# Deploy
vercel

# Follow prompts to configure deployment

üåê NETLIFY DEPLOYMENT
---------------------
# Build the project
npm run build

# Drag and drop 'dist' folder to Netlify
# Or connect GitHub repository for automatic deployments

üåê GITHUB PAGES DEPLOYMENT
--------------------------
# Install gh-pages
npm install --save-dev gh-pages

# Add to package.json scripts:
"homepage": "https://yourusername.github.io/portfolio_latest",
"predeploy": "npm run build",
"deploy": "gh-pages -d dist"

# Deploy
npm run deploy

===============================================================================
8. TROUBLESHOOTING
===============================================================================

‚ùå COMMON ISSUES & SOLUTIONS
----------------------------

Issue: "npm install" fails
Solution: 
- Clear npm cache: npm cache clean --force
- Delete node_modules: rm -rf node_modules
- Delete package-lock.json
- Run npm install again

Issue: Port 5173 already in use
Solution:
- Kill process: npx kill-port 5173
- Or use different port: npm run dev -- --port 3000

Issue: EmailJS not working
Solution:
- Check service ID, template ID, and user ID
- Verify EmailJS account is active
- Check browser console for errors
- Test with simple template first

Issue: Bootstrap styles not loading
Solution:
- Verify import order in main.jsx
- Check if bootstrap CSS is imported before custom CSS
- Clear browser cache

Issue: Icons not showing
Solution:
- Verify FontAwesome import in main.jsx
- Check icon class names (fas, fab, far)
- Ensure internet connection for CDN

Issue: Build fails
Solution:
- Check for syntax errors: npm run lint
- Verify all imports are correct
- Check for missing dependencies
- Clear node_modules and reinstall

Issue: Images not loading in production
Solution:
- Place images in public/assets/ folder
- Use absolute paths: /assets/image.jpg
- Not relative paths: ./assets/image.jpg

===============================================================================
9. FOLDER STRUCTURE SETUP
===============================================================================

üìÅ CREATE REQUIRED FOLDERS
--------------------------
mkdir public/assets
mkdir src/assets
mkdir src/components

üìÑ REQUIRED FILES CHECKLIST
---------------------------
‚úÖ public/assets/resume.pdf
‚úÖ src/assets/py.jpg (profile image)
‚úÖ src/components/ (all component files)
‚úÖ src/App.jsx
‚úÖ src/main.jsx
‚úÖ src/index.css
‚úÖ index.html
‚úÖ package.json
‚úÖ vite.config.js

===============================================================================
10. DEVELOPMENT WORKFLOW
===============================================================================

üìù DAILY DEVELOPMENT ROUTINE
----------------------------
1. Start development server: npm run dev
2. Make changes to components
3. Test in browser (auto-reloads)
4. Check for linting errors: npm run lint
5. Commit changes: git add . && git commit -m "message"
6. Push to repository: git push

üöÄ DEPLOYMENT ROUTINE
--------------------
1. Test locally: npm run dev
2. Build for production: npm run build
3. Preview build: npm run preview
4. Deploy to hosting service
5. Test live website
6. Monitor for issues

===============================================================================
11. USEFUL VS CODE EXTENSIONS
===============================================================================

üì¶ RECOMMENDED EXTENSIONS
------------------------
- ES7+ React/Redux/React-Native snippets
- Prettier - Code formatter
- ESLint
- Auto Rename Tag
- Bracket Pair Colorizer
- GitLens
- Thunder Client (for API testing)

===============================================================================
12. ADDITIONAL RESOURCES
===============================================================================

üìö DOCUMENTATION LINKS
----------------------
- React: https://react.dev/
- Vite: https://vitejs.dev/
- Bootstrap: https://getbootstrap.com/
- React Bootstrap: https://react-bootstrap.github.io/
- EmailJS: https://www.emailjs.com/docs/
- FontAwesome: https://fontawesome.com/

üé• LEARNING RESOURCES
--------------------
- React Official Tutorial
- Vite Getting Started Guide
- Bootstrap Documentation
- MDN Web Docs for JavaScript/CSS

===============================================================================

üéâ CONGRATULATIONS! 
Your portfolio website should now be up and running!

For any issues, refer to the troubleshooting section or check the documentation links provided above.

===============================================================================